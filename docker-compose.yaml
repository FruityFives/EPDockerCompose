services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - backend

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - backend
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  bidserviceapi:
    image: fawad23/bid-service:5.0.1
    container_name: bid-service
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_URLS=http://+:5003
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5003:5003"
    restart: always
    networks:
      - backend

  auctionserviceapi:
    image: abduawaiz/auction-service:6.2.1
    container_name: auctionserviceapi
    depends_on:
      - rabbitmq
      - loki
      - mongo
    environment:
      - RABBITMQ_HOST=rabbitmq
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5002
      - MONGODB_URI=mongodb://mongo:27017
      - AUCTION_DB_NAME=AuctionServiceDb
      - AUCTION_COLLECTION_NAME=AuctionCollection
      - CATALOG_COLLECTION_NAME=CatalogCollection
      - STORAGE_SERVICE_BASE_URL=http://nginx/api/storage
    ports:
      - "5002:5002"
    restart: always
    networks:
      - backend

  storage-service:
    image: fawad23/storage-service:2.4.8
    container_name: storage-service
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MONGODB_URI=mongodb://mongo:27017
      - STORAGE_DB_NAME=StorageDb
      - STORAGE_COLLECTION_NAME=StorageEffects
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5000
    ports:
      - "5000:5000"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - backend
    volumes:
      - condition-reports:/app/data/condition-reports

  valuation-service:
    image: sakariye1/valuation-service:4.3.2
    container_name: valuation-service
    environment:
      - RABBITMQ_HOST=rabbitmq
      - MongoDb__ConnectionString=mongodb://mongo:27017
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - backend
    volumes:
      - condition-reports:/app/data/condition-reports

  user-service:
    image: abduawaiz/user-service:2.0.0
    container_name: user-service
    platform: linux/amd64
    ports:
      - "6003:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - MONGODB_URI=mongodb://mongo:27017
      - MongoDb__ConnectionString=mongodb://mongo:27017
      - MongoDb__Database=UserServiceDb
      - MongoDb__Collection=Users
    depends_on:
      - mongo
    restart: always
    networks:
      - backend

  auth-service:
    image: abduawaiz/auth-service:3.0.0
    container_name: auth-service
    platform: linux/amd64
    ports:
      - "6001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - UserServiceUrl=http://user-service:8080
      - Secret=MinSuperHemmeligeNÃ¸gle1234567890123456!
      - Issuer=authServiceAPI
      - Audience=authServiceAPI
    depends_on:
      - user-service
    restart: always
    networks:
      - backend

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - storage-service
      - auctionserviceapi
      - bidserviceapi
      - valuation-service
      - user-service
      - auth-service
    networks:
      - backend

volumes:
  mongo-data:
  condition-reports:

networks:
  backend:
